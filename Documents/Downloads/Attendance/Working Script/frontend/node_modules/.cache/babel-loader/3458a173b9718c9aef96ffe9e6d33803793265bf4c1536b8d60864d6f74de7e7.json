{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\m.hakkim\\\\Documents\\\\Downloads\\\\Attendance\\\\frontend\\\\src\\\\pages\\\\PayrollPage.js\",\n  _s = $RefreshSig$();\n// frontend/src/pages/PayrollPage.js\nimport React, { useState, useEffect } from 'react';\nimport { useAuth } from '../hooks/useAuth';\nimport { useNotifications } from '../context/NotificationContext';\nimport Navbar from '../components/Navbar';\nimport Sidebar from '../components/Sidebar';\nimport DataTable from '../components/DataTable';\nimport Charts from '../components/Charts';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PayrollPage = () => {\n  _s();\n  const {\n    user,\n    token\n  } = useAuth();\n  const {\n    addNotification\n  } = useNotifications();\n  const [payrollData, setPayrollData] = useState([]);\n  const [employees, setEmployees] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [selectedPeriod, setSelectedPeriod] = useState({\n    month: new Date().getMonth() + 1,\n    year: new Date().getFullYear()\n  });\n  const [showGenerateModal, setShowGenerateModal] = useState(false);\n  const [generating, setGenerating] = useState(false);\n  const [payrollSummary, setPayrollSummary] = useState(null);\n  useEffect(() => {\n    fetchPayrollData();\n    fetchEmployees();\n    fetchPayrollSummary();\n  }, [selectedPeriod]);\n  const fetchPayrollData = async () => {\n    try {\n      const response = await fetch(`/api/payroll?month=${selectedPeriod.month}&year=${selectedPeriod.year}`, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      if (response.ok) {\n        const data = await response.json();\n        setPayrollData(data.payroll || []);\n      } else {\n        throw new Error('Failed to fetch payroll data');\n      }\n    } catch (error) {\n      addNotification('Failed to fetch payroll data', 'error');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const fetchEmployees = async () => {\n    try {\n      const response = await fetch('/api/users/employees', {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      if (response.ok) {\n        const data = await response.json();\n        setEmployees(data.employees || []);\n      }\n    } catch (error) {\n      console.error('Failed to fetch employees:', error);\n    }\n  };\n  const fetchPayrollSummary = async () => {\n    try {\n      const response = await fetch(`/api/payroll/summary?month=${selectedPeriod.month}&year=${selectedPeriod.year}`, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      if (response.ok) {\n        const data = await response.json();\n        setPayrollSummary(data);\n      }\n    } catch (error) {\n      console.error('Failed to fetch payroll summary:', error);\n    }\n  };\n  const generatePayroll = async () => {\n    setGenerating(true);\n    try {\n      const response = await fetch('/api/payroll/generate', {\n        method: 'POST',\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          month: selectedPeriod.month,\n          year: selectedPeriod.year\n        })\n      });\n      if (response.ok) {\n        const data = await response.json();\n        addNotification(`Payroll generated for ${data.generatedCount} employees`, 'success');\n        setShowGenerateModal(false);\n        fetchPayrollData();\n        fetchPayrollSummary();\n      } else {\n        const error = await response.json();\n        throw new Error(error.message || 'Failed to generate payroll');\n      }\n    } catch (error) {\n      addNotification(error.message, 'error');\n    } finally {\n      setGenerating(false);\n    }\n  };\n  const exportPayroll = async (format = 'excel') => {\n    try {\n      const response = await fetch(`/api/payroll/export?month=${selectedPeriod.month}&year=${selectedPeriod.year}&format=${format}`, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      if (response.ok) {\n        const blob = await response.blob();\n        const url = window.URL.createObjectURL(blob);\n        const a = document.createElement('a');\n        a.href = url;\n        a.download = `payroll_${selectedPeriod.month}_${selectedPeriod.year}.${format === 'pdf' ? 'pdf' : 'xlsx'}`;\n        document.body.appendChild(a);\n        a.click();\n        window.URL.revokeObjectURL(url);\n        document.body.removeChild(a);\n        addNotification('Payroll exported successfully', 'success');\n      } else {\n        throw new Error('Failed to export payroll');\n      }\n    } catch (error) {\n      addNotification('Failed to export payroll', 'error');\n    }\n  };\n  const formatCurrency = amount => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD'\n    }).format(amount || 0);\n  };\n  const getMonthName = month => {\n    const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n    return months[month - 1];\n  };\n  const payrollColumns = [{\n    key: 'employee',\n    label: 'Employee',\n    render: payroll => {\n      var _payroll$employee, _payroll$employee2;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"font-medium\",\n          children: (_payroll$employee = payroll.employee) === null || _payroll$employee === void 0 ? void 0 : _payroll$employee.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-sm text-gray-500\",\n          children: (_payroll$employee2 = payroll.employee) === null || _payroll$employee2 === void 0 ? void 0 : _payroll$employee2.employeeId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this);\n    }\n  }, {\n    key: 'period',\n    label: 'Pay Period',\n    render: payroll => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"font-medium\",\n        children: [getMonthName(payroll.month), \" \", payroll.year]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-sm text-gray-500\",\n        children: [payroll.workingDays, \" working days\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 9\n    }, this)\n  }, {\n    key: 'attendance',\n    label: 'Attendance',\n    render: payroll => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"font-medium\",\n        children: [payroll.daysPresent, \" / \", payroll.workingDays]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-sm text-gray-500\",\n        children: payroll.overtimeHours > 0 && `OT: ${payroll.overtimeHours}h`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 9\n    }, this)\n  }, {\n    key: 'basicSalary',\n    label: 'Basic Salary',\n    render: payroll => formatCurrency(payroll.basicSalary)\n  }, {\n    key: 'allowances',\n    label: 'Allowances',\n    render: payroll => formatCurrency(payroll.allowances)\n  }, {\n    key: 'deductions',\n    label: 'Deductions',\n    render: payroll => formatCurrency(payroll.deductions)\n  }, {\n    key: 'netSalary',\n    label: 'Net Salary',\n    render: payroll => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"font-medium text-green-600\",\n      children: formatCurrency(payroll.netSalary)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 9\n    }, this)\n  }, {\n    key: 'status',\n    label: 'Status',\n    render: payroll => /*#__PURE__*/_jsxDEV(\"span\", {\n      className: `px-2 py-1 rounded-full text-xs font-medium ${payroll.status === 'paid' ? 'bg-green-100 text-green-800' : payroll.status === 'processed' ? 'bg-blue-100 text-blue-800' : 'bg-yellow-100 text-yellow-800'}`,\n      children: payroll.status.charAt(0).toUpperCase() + payroll.status.slice(1)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 9\n    }, this)\n  }];\n  const payrollActions = [{\n    label: 'View Details',\n    action: payroll => console.log('View payroll details:', payroll),\n    className: 'text-blue-600 hover:text-blue-800'\n  }];\n  if (user.role !== 'employee') {\n    payrollActions.push({\n      label: 'Mark as Paid',\n      action: async payroll => {\n        try {\n          const response = await fetch(`/api/payroll/${payroll._id}/mark-paid`, {\n            method: 'PUT',\n            headers: {\n              'Authorization': `Bearer ${token}`,\n              'Content-Type': 'application/json'\n            }\n          });\n          if (response.ok) {\n            addNotification('Payroll marked as paid', 'success');\n            fetchPayrollData();\n          } else {\n            throw new Error('Failed to update payroll status');\n          }\n        } catch (error) {\n          addNotification('Failed to update payroll status', 'error');\n        }\n      },\n      className: 'text-green-600 hover:text-green-800',\n      condition: payroll => payroll.status !== 'paid'\n    });\n  }\n  const chartData = payrollSummary ? [{\n    name: 'Total Salary',\n    value: payrollSummary.totalSalary,\n    color: '#3B82F6'\n  }, {\n    name: 'Total Allowances',\n    value: payrollSummary.totalAllowances,\n    color: '#10B981'\n  }, {\n    name: 'Total Deductions',\n    value: payrollSummary.totalDeductions,\n    color: '#EF4444'\n  }] : [];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-50\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex\",\n      children: [/*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-1 p-8\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"max-w-7xl mx-auto\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-between items-center mb-8\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                className: \"text-3xl font-bold text-gray-900\",\n                children: \"Payroll Management\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 302,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-gray-600 mt-2\",\n                children: user.role === 'employee' ? 'View your salary and payment history' : 'Manage employee payroll and salary calculations'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 303,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 15\n            }, this), user.role !== 'employee' && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex space-x-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => exportPayroll('excel'),\n                className: \"bg-green-600 hover:bg-green-700 text-white px-4 py-2 rounded-lg font-medium transition-colors\",\n                children: \"Export Excel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 312,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => exportPayroll('pdf'),\n                className: \"bg-red-600 hover:bg-red-700 text-white px-4 py-2 rounded-lg font-medium transition-colors\",\n                children: \"Export PDF\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 318,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => setShowGenerateModal(true),\n                className: \"bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-lg font-medium transition-colors\",\n                children: \"Generate Payroll\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 324,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-white rounded-lg shadow-sm p-6 mb-6\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center space-x-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                className: \"text-lg font-semibold\",\n                children: \"Pay Period\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 337,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                value: selectedPeriod.month,\n                onChange: e => setSelectedPeriod({\n                  ...selectedPeriod,\n                  month: parseInt(e.target.value)\n                }),\n                className: \"border border-gray-300 rounded-lg px-3 py-2 focus:ring-2 focus:ring-blue-500 focus:border-transparent\",\n                children: Array.from({\n                  length: 12\n                }, (_, i) => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: i + 1,\n                  children: getMonthName(i + 1)\n                }, i + 1, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 344,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 338,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                value: selectedPeriod.year,\n                onChange: e => setSelectedPeriod({\n                  ...selectedPeriod,\n                  year: parseInt(e.target.value)\n                }),\n                className: \"border border-gray-300 rounded-lg px-3 py-2 focus:ring-2 focus:ring-blue-500 focus:border-transparent\",\n                children: Array.from({\n                  length: 5\n                }, (_, i) => {\n                  const year = new Date().getFullYear() - 2 + i;\n                  return /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: year,\n                    children: year\n                  }, year, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 357,\n                    columnNumber: 23\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 349,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 336,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 13\n          }, this), payrollSummary && user.role !== 'employee' && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid grid-cols-1 md:grid-cols-4 gap-6 mb-8\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bg-white rounded-lg shadow-sm p-6\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"p-2 bg-blue-100 rounded-lg\",\n                  children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                    className: \"w-6 h-6 text-blue-600\",\n                    fill: \"none\",\n                    stroke: \"currentColor\",\n                    viewBox: \"0 0 24 24\",\n                    children: /*#__PURE__*/_jsxDEV(\"path\", {\n                      strokeLinecap: \"round\",\n                      strokeLinejoin: \"round\",\n                      strokeWidth: 2,\n                      d: \"M17 9V7a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2m2 4h10a2 2 0 002-2v-6a2 2 0 00-2-2H9a2 2 0 00-2 2v6a2 2 0 002 2zm7-5a2 2 0 11-4 0 2 2 0 014 0z\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 371,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 370,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 369,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"ml-4\",\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-sm font-medium text-gray-600\",\n                    children: \"Total Payroll\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 375,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-2xl font-semibold text-gray-900\",\n                    children: formatCurrency(payrollSummary.totalPayroll)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 376,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 374,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 368,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 367,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bg-white rounded-lg shadow-sm p-6\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"p-2 bg-green-100 rounded-lg\",\n                  children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                    className: \"w-6 h-6 text-green-600\",\n                    fill: \"none\",\n                    stroke: \"currentColor\",\n                    viewBox: \"0 0 24 24\",\n                    children: /*#__PURE__*/_jsxDEV(\"path\", {\n                      strokeLinecap: \"round\",\n                      strokeLinejoin: \"round\",\n                      strokeWidth: 2,\n                      d: \"M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 387,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 386,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 385,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"ml-4\",\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-sm font-medium text-gray-600\",\n                    children: \"Employees Paid\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 391,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-2xl font-semibold text-gray-900\",\n                    children: payrollSummary.employeesPaid\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 392,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 390,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 384,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 383,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bg-white rounded-lg shadow-sm p-6\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"p-2 bg-yellow-100 rounded-lg\",\n                  children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                    className: \"w-6 h-6 text-yellow-600\",\n                    fill: \"none\",\n                    stroke: \"currentColor\",\n                    viewBox: \"0 0 24 24\",\n                    children: /*#__PURE__*/_jsxDEV(\"path\", {\n                      strokeLinecap: \"round\",\n                      strokeLinejoin: \"round\",\n                      strokeWidth: 2,\n                      d: \"M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 403,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 402,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 401,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"ml-4\",\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-sm font-medium text-gray-600\",\n                    children: \"Pending\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 407,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-2xl font-semibold text-gray-900\",\n                    children: payrollSummary.pendingPayments\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 408,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 406,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 400,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 399,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bg-white rounded-lg shadow-sm p-6\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"p-2 bg-purple-100 rounded-lg\",\n                  children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                    className: \"w-6 h-6 text-purple-600\",\n                    fill: \"none\",\n                    stroke: \"currentColor\",\n                    viewBox: \"0 0 24 24\",\n                    children: /*#__PURE__*/_jsxDEV(\"path\", {\n                      strokeLinecap: \"round\",\n                      strokeLinejoin: \"round\",\n                      strokeWidth: 2,\n                      d: \"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 419,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 418,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 417,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"ml-4\",\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-sm font-medium text-gray-600\",\n                    children: \"Avg. Salary\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 423,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-2xl font-semibold text-gray-900\",\n                    children: formatCurrency(payrollSummary.avgSalary)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 424,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 422,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 416,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 415,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 15\n          }, this), chartData.length > 0 && user.role !== 'employee' && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-white rounded-lg shadow-sm p-6 mb-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"text-xl font-semibold mb-4\",\n              children: \"Payroll Breakdown\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 436,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Charts, {\n              data: chartData,\n              type: \"bar\",\n              height: 300\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 437,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 435,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-white rounded-lg shadow-sm\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"p-6 border-b border-gray-200\",\n              children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                className: \"text-xl font-semibold\",\n                children: [\"Payroll Records - \", getMonthName(selectedPeriod.month), \" \", selectedPeriod.year]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 448,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 447,\n              columnNumber: 15\n            }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"p-8 text-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 454,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"mt-4 text-gray-600\",\n                children: \"Loading payroll data...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 455,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 453,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(DataTable, {\n              data: payrollData,\n              columns: payrollColumns,\n              actions: payrollActions,\n              emptyMessage: \"No payroll data found for this period\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 458,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 446,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 7\n    }, this), showGenerateModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white rounded-lg shadow-xl max-w-md w-full\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"p-2 bg-blue-100 rounded-lg mr-3\",\n              children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                className: \"w-6 h-6 text-blue-600\",\n                fill: \"none\",\n                stroke: \"currentColor\",\n                viewBox: \"0 0 24 24\",\n                children: /*#__PURE__*/_jsxDEV(\"path\", {\n                  strokeLinecap: \"round\",\n                  strokeLinejoin: \"round\",\n                  strokeWidth: 2,\n                  d: \"M17 9V7a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2m2 4h10a2 2 0 002-2v-6a2 2 0 00-2-2H9a2 2 0 00-2 2v6a2 2 0 002 2zm7-5a2 2 0 11-4 0 2 2 0 014 0z\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 478,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 477,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 476,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"text-xl font-semibold\",\n              children: \"Generate Payroll\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 481,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 475,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-gray-600 mb-6\",\n            children: [\"This will generate payroll for \", getMonthName(selectedPeriod.month), \" \", selectedPeriod.year, \"for all active employees. Are you sure you want to continue?\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 484,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-end space-x-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setShowGenerateModal(false),\n              disabled: generating,\n              className: \"px-4 py-2 border border-gray-300 rounded-lg text-gray-700 hover:bg-gray-50 font-medium transition-colors disabled:opacity-50\",\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 490,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: generatePayroll,\n              disabled: generating,\n              className: \"px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white rounded-lg font-medium transition-colors disabled:opacity-50 flex items-center\",\n              children: generating ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 504,\n                  columnNumber: 23\n                }, this), \"Generating...\"]\n              }, void 0, true) : 'Generate Payroll'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 497,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 489,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 474,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 473,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 472,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 293,\n    columnNumber: 5\n  }, this);\n};\n_s(PayrollPage, \"W3KxWW2XJ4Ell2a8zs3txKcOVhI=\", false, function () {\n  return [useAuth, useNotifications];\n});\n_c = PayrollPage;\nexport default PayrollPage;\nvar _c;\n$RefreshReg$(_c, \"PayrollPage\");","map":{"version":3,"names":["React","useState","useEffect","useAuth","useNotifications","Navbar","Sidebar","DataTable","Charts","jsxDEV","_jsxDEV","Fragment","_Fragment","PayrollPage","_s","user","token","addNotification","payrollData","setPayrollData","employees","setEmployees","loading","setLoading","selectedPeriod","setSelectedPeriod","month","Date","getMonth","year","getFullYear","showGenerateModal","setShowGenerateModal","generating","setGenerating","payrollSummary","setPayrollSummary","fetchPayrollData","fetchEmployees","fetchPayrollSummary","response","fetch","headers","ok","data","json","payroll","Error","error","console","generatePayroll","method","body","JSON","stringify","generatedCount","message","exportPayroll","format","blob","url","window","URL","createObjectURL","a","document","createElement","href","download","appendChild","click","revokeObjectURL","removeChild","formatCurrency","amount","Intl","NumberFormat","style","currency","getMonthName","months","payrollColumns","key","label","render","_payroll$employee","_payroll$employee2","children","className","employee","name","fileName","_jsxFileName","lineNumber","columnNumber","employeeId","workingDays","daysPresent","overtimeHours","basicSalary","allowances","deductions","netSalary","status","charAt","toUpperCase","slice","payrollActions","action","log","role","push","_id","condition","chartData","value","totalSalary","color","totalAllowances","totalDeductions","onClick","onChange","e","parseInt","target","Array","from","length","_","i","fill","stroke","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","d","totalPayroll","employeesPaid","pendingPayments","avgSalary","type","height","columns","actions","emptyMessage","disabled","_c","$RefreshReg$"],"sources":["C:/Users/m.hakkim/Documents/Downloads/Attendance/frontend/src/pages/PayrollPage.js"],"sourcesContent":["// frontend/src/pages/PayrollPage.js\nimport React, { useState, useEffect } from 'react';\nimport { useAuth } from '../hooks/useAuth';\nimport { useNotifications } from '../context/NotificationContext';\nimport Navbar from '../components/Navbar';\nimport Sidebar from '../components/Sidebar';\nimport DataTable from '../components/DataTable';\nimport Charts from '../components/Charts';\n\nconst PayrollPage = () => {\n  const { user, token } = useAuth();\n  const { addNotification } = useNotifications();\n  const [payrollData, setPayrollData] = useState([]);\n  const [employees, setEmployees] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [selectedPeriod, setSelectedPeriod] = useState({\n    month: new Date().getMonth() + 1,\n    year: new Date().getFullYear()\n  });\n  const [showGenerateModal, setShowGenerateModal] = useState(false);\n  const [generating, setGenerating] = useState(false);\n  const [payrollSummary, setPayrollSummary] = useState(null);\n\n  useEffect(() => {\n    fetchPayrollData();\n    fetchEmployees();\n    fetchPayrollSummary();\n  }, [selectedPeriod]);\n\n  const fetchPayrollData = async () => {\n    try {\n      const response = await fetch(`/api/payroll?month=${selectedPeriod.month}&year=${selectedPeriod.year}`, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n\n      if (response.ok) {\n        const data = await response.json();\n        setPayrollData(data.payroll || []);\n      } else {\n        throw new Error('Failed to fetch payroll data');\n      }\n    } catch (error) {\n      addNotification('Failed to fetch payroll data', 'error');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const fetchEmployees = async () => {\n    try {\n      const response = await fetch('/api/users/employees', {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n\n      if (response.ok) {\n        const data = await response.json();\n        setEmployees(data.employees || []);\n      }\n    } catch (error) {\n      console.error('Failed to fetch employees:', error);\n    }\n  };\n\n  const fetchPayrollSummary = async () => {\n    try {\n      const response = await fetch(`/api/payroll/summary?month=${selectedPeriod.month}&year=${selectedPeriod.year}`, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n\n      if (response.ok) {\n        const data = await response.json();\n        setPayrollSummary(data);\n      }\n    } catch (error) {\n      console.error('Failed to fetch payroll summary:', error);\n    }\n  };\n\n  const generatePayroll = async () => {\n    setGenerating(true);\n    try {\n      const response = await fetch('/api/payroll/generate', {\n        method: 'POST',\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          month: selectedPeriod.month,\n          year: selectedPeriod.year\n        })\n      });\n\n      if (response.ok) {\n        const data = await response.json();\n        addNotification(`Payroll generated for ${data.generatedCount} employees`, 'success');\n        setShowGenerateModal(false);\n        fetchPayrollData();\n        fetchPayrollSummary();\n      } else {\n        const error = await response.json();\n        throw new Error(error.message || 'Failed to generate payroll');\n      }\n    } catch (error) {\n      addNotification(error.message, 'error');\n    } finally {\n      setGenerating(false);\n    }\n  };\n\n  const exportPayroll = async (format = 'excel') => {\n    try {\n      const response = await fetch(`/api/payroll/export?month=${selectedPeriod.month}&year=${selectedPeriod.year}&format=${format}`, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n\n      if (response.ok) {\n        const blob = await response.blob();\n        const url = window.URL.createObjectURL(blob);\n        const a = document.createElement('a');\n        a.href = url;\n        a.download = `payroll_${selectedPeriod.month}_${selectedPeriod.year}.${format === 'pdf' ? 'pdf' : 'xlsx'}`;\n        document.body.appendChild(a);\n        a.click();\n        window.URL.revokeObjectURL(url);\n        document.body.removeChild(a);\n        addNotification('Payroll exported successfully', 'success');\n      } else {\n        throw new Error('Failed to export payroll');\n      }\n    } catch (error) {\n      addNotification('Failed to export payroll', 'error');\n    }\n  };\n\n  const formatCurrency = (amount) => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD'\n    }).format(amount || 0);\n  };\n\n  const getMonthName = (month) => {\n    const months = [\n      'January', 'February', 'March', 'April', 'May', 'June',\n      'July', 'August', 'September', 'October', 'November', 'December'\n    ];\n    return months[month - 1];\n  };\n\n  const payrollColumns = [\n    {\n      key: 'employee',\n      label: 'Employee',\n      render: (payroll) => (\n        <div>\n          <div className=\"font-medium\">{payroll.employee?.name}</div>\n          <div className=\"text-sm text-gray-500\">{payroll.employee?.employeeId}</div>\n        </div>\n      )\n    },\n    {\n      key: 'period',\n      label: 'Pay Period',\n      render: (payroll) => (\n        <div>\n          <div className=\"font-medium\">{getMonthName(payroll.month)} {payroll.year}</div>\n          <div className=\"text-sm text-gray-500\">{payroll.workingDays} working days</div>\n        </div>\n      )\n    },\n    {\n      key: 'attendance',\n      label: 'Attendance',\n      render: (payroll) => (\n        <div>\n          <div className=\"font-medium\">{payroll.daysPresent} / {payroll.workingDays}</div>\n          <div className=\"text-sm text-gray-500\">\n            {payroll.overtimeHours > 0 && `OT: ${payroll.overtimeHours}h`}\n          </div>\n        </div>\n      )\n    },\n    {\n      key: 'basicSalary',\n      label: 'Basic Salary',\n      render: (payroll) => formatCurrency(payroll.basicSalary)\n    },\n    {\n      key: 'allowances',\n      label: 'Allowances',\n      render: (payroll) => formatCurrency(payroll.allowances)\n    },\n    {\n      key: 'deductions',\n      label: 'Deductions',\n      render: (payroll) => formatCurrency(payroll.deductions)\n    },\n    {\n      key: 'netSalary',\n      label: 'Net Salary',\n      render: (payroll) => (\n        <div className=\"font-medium text-green-600\">\n          {formatCurrency(payroll.netSalary)}\n        </div>\n      )\n    },\n    {\n      key: 'status',\n      label: 'Status',\n      render: (payroll) => (\n        <span className={`px-2 py-1 rounded-full text-xs font-medium ${\n          payroll.status === 'paid' \n            ? 'bg-green-100 text-green-800' \n            : payroll.status === 'processed'\n            ? 'bg-blue-100 text-blue-800'\n            : 'bg-yellow-100 text-yellow-800'\n        }`}>\n          {payroll.status.charAt(0).toUpperCase() + payroll.status.slice(1)}\n        </span>\n      )\n    }\n  ];\n\n  const payrollActions = [\n    {\n      label: 'View Details',\n      action: (payroll) => console.log('View payroll details:', payroll),\n      className: 'text-blue-600 hover:text-blue-800'\n    }\n  ];\n\n  if (user.role !== 'employee') {\n    payrollActions.push(\n      {\n        label: 'Mark as Paid',\n        action: async (payroll) => {\n          try {\n            const response = await fetch(`/api/payroll/${payroll._id}/mark-paid`, {\n              method: 'PUT',\n              headers: {\n                'Authorization': `Bearer ${token}`,\n                'Content-Type': 'application/json'\n              }\n            });\n\n            if (response.ok) {\n              addNotification('Payroll marked as paid', 'success');\n              fetchPayrollData();\n            } else {\n              throw new Error('Failed to update payroll status');\n            }\n          } catch (error) {\n            addNotification('Failed to update payroll status', 'error');\n          }\n        },\n        className: 'text-green-600 hover:text-green-800',\n        condition: (payroll) => payroll.status !== 'paid'\n      }\n    );\n  }\n\n  const chartData = payrollSummary ? [\n    {\n      name: 'Total Salary',\n      value: payrollSummary.totalSalary,\n      color: '#3B82F6'\n    },\n    {\n      name: 'Total Allowances',\n      value: payrollSummary.totalAllowances,\n      color: '#10B981'\n    },\n    {\n      name: 'Total Deductions',\n      value: payrollSummary.totalDeductions,\n      color: '#EF4444'\n    }\n  ] : [];\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      <Navbar />\n      <div className=\"flex\">\n        <Sidebar />\n        <div className=\"flex-1 p-8\">\n          <div className=\"max-w-7xl mx-auto\">\n            {/* Header */}\n            <div className=\"flex justify-between items-center mb-8\">\n              <div>\n                <h1 className=\"text-3xl font-bold text-gray-900\">Payroll Management</h1>\n                <p className=\"text-gray-600 mt-2\">\n                  {user.role === 'employee' \n                    ? 'View your salary and payment history' \n                    : 'Manage employee payroll and salary calculations'\n                  }\n                </p>\n              </div>\n              {user.role !== 'employee' && (\n                <div className=\"flex space-x-3\">\n                  <button\n                    onClick={() => exportPayroll('excel')}\n                    className=\"bg-green-600 hover:bg-green-700 text-white px-4 py-2 rounded-lg font-medium transition-colors\"\n                  >\n                    Export Excel\n                  </button>\n                  <button\n                    onClick={() => exportPayroll('pdf')}\n                    className=\"bg-red-600 hover:bg-red-700 text-white px-4 py-2 rounded-lg font-medium transition-colors\"\n                  >\n                    Export PDF\n                  </button>\n                  <button\n                    onClick={() => setShowGenerateModal(true)}\n                    className=\"bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-lg font-medium transition-colors\"\n                  >\n                    Generate Payroll\n                  </button>\n                </div>\n              )}\n            </div>\n\n            {/* Period Selector */}\n            <div className=\"bg-white rounded-lg shadow-sm p-6 mb-6\">\n              <div className=\"flex items-center space-x-4\">\n                <h2 className=\"text-lg font-semibold\">Pay Period</h2>\n                <select\n                  value={selectedPeriod.month}\n                  onChange={(e) => setSelectedPeriod({...selectedPeriod, month: parseInt(e.target.value)})}\n                  className=\"border border-gray-300 rounded-lg px-3 py-2 focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                >\n                  {Array.from({length: 12}, (_, i) => (\n                    <option key={i + 1} value={i + 1}>\n                      {getMonthName(i + 1)}\n                    </option>\n                  ))}\n                </select>\n                <select\n                  value={selectedPeriod.year}\n                  onChange={(e) => setSelectedPeriod({...selectedPeriod, year: parseInt(e.target.value)})}\n                  className=\"border border-gray-300 rounded-lg px-3 py-2 focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                >\n                  {Array.from({length: 5}, (_, i) => {\n                    const year = new Date().getFullYear() - 2 + i;\n                    return (\n                      <option key={year} value={year}>{year}</option>\n                    );\n                  })}\n                </select>\n              </div>\n            </div>\n\n            {/* Summary Cards */}\n            {payrollSummary && user.role !== 'employee' && (\n              <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6 mb-8\">\n                <div className=\"bg-white rounded-lg shadow-sm p-6\">\n                  <div className=\"flex items-center\">\n                    <div className=\"p-2 bg-blue-100 rounded-lg\">\n                      <svg className=\"w-6 h-6 text-blue-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M17 9V7a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2m2 4h10a2 2 0 002-2v-6a2 2 0 00-2-2H9a2 2 0 00-2 2v6a2 2 0 002 2zm7-5a2 2 0 11-4 0 2 2 0 014 0z\" />\n                      </svg>\n                    </div>\n                    <div className=\"ml-4\">\n                      <p className=\"text-sm font-medium text-gray-600\">Total Payroll</p>\n                      <p className=\"text-2xl font-semibold text-gray-900\">\n                        {formatCurrency(payrollSummary.totalPayroll)}\n                      </p>\n                    </div>\n                  </div>\n                </div>\n                \n                <div className=\"bg-white rounded-lg shadow-sm p-6\">\n                  <div className=\"flex items-center\">\n                    <div className=\"p-2 bg-green-100 rounded-lg\">\n                      <svg className=\"w-6 h-6 text-green-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1\" />\n                      </svg>\n                    </div>\n                    <div className=\"ml-4\">\n                      <p className=\"text-sm font-medium text-gray-600\">Employees Paid</p>\n                      <p className=\"text-2xl font-semibold text-gray-900\">\n                        {payrollSummary.employeesPaid}\n                      </p>\n                    </div>\n                  </div>\n                </div>\n                \n                <div className=\"bg-white rounded-lg shadow-sm p-6\">\n                  <div className=\"flex items-center\">\n                    <div className=\"p-2 bg-yellow-100 rounded-lg\">\n                      <svg className=\"w-6 h-6 text-yellow-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                      </svg>\n                    </div>\n                    <div className=\"ml-4\">\n                      <p className=\"text-sm font-medium text-gray-600\">Pending</p>\n                      <p className=\"text-2xl font-semibold text-gray-900\">\n                        {payrollSummary.pendingPayments}\n                      </p>\n                    </div>\n                  </div>\n                </div>\n                \n                <div className=\"bg-white rounded-lg shadow-sm p-6\">\n                  <div className=\"flex items-center\">\n                    <div className=\"p-2 bg-purple-100 rounded-lg\">\n                      <svg className=\"w-6 h-6 text-purple-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z\" />\n                      </svg>\n                    </div>\n                    <div className=\"ml-4\">\n                      <p className=\"text-sm font-medium text-gray-600\">Avg. Salary</p>\n                      <p className=\"text-2xl font-semibold text-gray-900\">\n                        {formatCurrency(payrollSummary.avgSalary)}\n                      </p>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            )}\n\n            {/* Chart */}\n            {chartData.length > 0 && user.role !== 'employee' && (\n              <div className=\"bg-white rounded-lg shadow-sm p-6 mb-6\">\n                <h2 className=\"text-xl font-semibold mb-4\">Payroll Breakdown</h2>\n                <Charts\n                  data={chartData}\n                  type=\"bar\"\n                  height={300}\n                />\n              </div>\n            )}\n\n            {/* Payroll Table */}\n            <div className=\"bg-white rounded-lg shadow-sm\">\n              <div className=\"p-6 border-b border-gray-200\">\n                <h2 className=\"text-xl font-semibold\">\n                  Payroll Records - {getMonthName(selectedPeriod.month)} {selectedPeriod.year}\n                </h2>\n              </div>\n              {loading ? (\n                <div className=\"p-8 text-center\">\n                  <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto\"></div>\n                  <p className=\"mt-4 text-gray-600\">Loading payroll data...</p>\n                </div>\n              ) : (\n                <DataTable\n                  data={payrollData}\n                  columns={payrollColumns}\n                  actions={payrollActions}\n                  emptyMessage=\"No payroll data found for this period\"\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Generate Payroll Modal */}\n      {showGenerateModal && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50\">\n          <div className=\"bg-white rounded-lg shadow-xl max-w-md w-full\">\n            <div className=\"p-6\">\n              <div className=\"flex items-center mb-4\">\n                <div className=\"p-2 bg-blue-100 rounded-lg mr-3\">\n                  <svg className=\"w-6 h-6 text-blue-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M17 9V7a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2m2 4h10a2 2 0 002-2v-6a2 2 0 00-2-2H9a2 2 0 00-2 2v6a2 2 0 002 2zm7-5a2 2 0 11-4 0 2 2 0 014 0z\" />\n                  </svg>\n                </div>\n                <h2 className=\"text-xl font-semibold\">Generate Payroll</h2>\n              </div>\n              \n              <p className=\"text-gray-600 mb-6\">\n                This will generate payroll for {getMonthName(selectedPeriod.month)} {selectedPeriod.year} \n                for all active employees. Are you sure you want to continue?\n              </p>\n              \n              <div className=\"flex justify-end space-x-3\">\n                <button\n                  onClick={() => setShowGenerateModal(false)}\n                  disabled={generating}\n                  className=\"px-4 py-2 border border-gray-300 rounded-lg text-gray-700 hover:bg-gray-50 font-medium transition-colors disabled:opacity-50\"\n                >\n                  Cancel\n                </button>\n                <button\n                  onClick={generatePayroll}\n                  disabled={generating}\n                  className=\"px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white rounded-lg font-medium transition-colors disabled:opacity-50 flex items-center\"\n                >\n                  {generating ? (\n                    <>\n                      <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2\"></div>\n                      Generating...\n                    </>\n                  ) : (\n                    'Generate Payroll'\n                  )}\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default PayrollPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}