{"ast":null,"code":"var _s = $RefreshSig$();\n// frontend/src/hooks/useAttendance.js\nimport { useState, useEffect, useCallback } from 'react';\nimport { useAuth } from './useAuth';\nimport { useNotifications } from './useNotifications';\nexport const useAttendance = () => {\n  _s();\n  const {\n    apiClient,\n    user\n  } = useAuth();\n  const {\n    showSuccess,\n    showError\n  } = useNotifications();\n  const [attendance, setAttendance] = useState([]);\n  const [todayAttendance, setTodayAttendance] = useState(null);\n  const [stats, setStats] = useState({\n    present: 0,\n    absent: 0,\n    late: 0,\n    overtime: 0\n  });\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  // Fetch attendance records\n  const fetchAttendance = useCallback(async (filters = {}) => {\n    setLoading(true);\n    setError(null);\n    try {\n      const params = new URLSearchParams();\n      Object.keys(filters).forEach(key => {\n        if (filters[key]) {\n          params.append(key, filters[key]);\n        }\n      });\n      const response = await apiClient.get(`/attendance?${params.toString()}`);\n      setAttendance(response.data.attendance);\n      return response.data.attendance;\n    } catch (error) {\n      var _error$response, _error$response$data;\n      const errorMessage = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Failed to fetch attendance';\n      setError(errorMessage);\n      showError(errorMessage);\n      return [];\n    } finally {\n      setLoading(false);\n    }\n  }, [apiClient, showError]);\n\n  // Fetch today's attendance\n  const fetchTodayAttendance = useCallback(async () => {\n    try {\n      const today = new Date().toISOString().split('T')[0];\n      const response = await apiClient.get(`/attendance/today?date=${today}`);\n      setTodayAttendance(response.data.attendance);\n      return response.data.attendance;\n    } catch (error) {\n      console.error('Error fetching today attendance:', error);\n      return null;\n    }\n  }, [apiClient]);\n\n  // Fetch attendance statistics\n  const fetchStats = useCallback(async (period = 'month') => {\n    try {\n      const response = await apiClient.get(`/attendance/stats?period=${period}`);\n      setStats(response.data.stats);\n      return response.data.stats;\n    } catch (error) {\n      console.error('Error fetching attendance stats:', error);\n      return null;\n    }\n  }, [apiClient]);\n\n  // Check in attendance\n  const checkIn = async (locationData, faceData) => {\n    setLoading(true);\n    try {\n      const formData = new FormData();\n\n      // Add location data\n      if (locationData) {\n        formData.append('latitude', locationData.latitude);\n        formData.append('longitude', locationData.longitude);\n        formData.append('address', locationData.address || '');\n      }\n\n      // Add face image data\n      if (faceData) {\n        if (faceData instanceof File) {\n          formData.append('faceImage', faceData);\n        } else if (typeof faceData === 'string') {\n          // Base64 image data\n          formData.append('faceImageData', faceData);\n        }\n      }\n      const response = await apiClient.post('/attendance/check-in', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      await fetchTodayAttendance();\n      showSuccess('Checked in successfully');\n      return {\n        success: true,\n        data: response.data\n      };\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      const errorMessage = ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Check-in failed';\n      showError(errorMessage);\n      return {\n        success: false,\n        error: errorMessage\n      };\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Check out attendance\n  const checkOut = async locationData => {\n    setLoading(true);\n    try {\n      const data = {};\n\n      // Add location data\n      if (locationData) {\n        data.latitude = locationData.latitude;\n        data.longitude = locationData.longitude;\n        data.address = locationData.address || '';\n      }\n      const response = await apiClient.post('/attendance/check-out', data);\n      await fetchTodayAttendance();\n      showSuccess('Checked out successfully');\n      return {\n        success: true,\n        data: response.data\n      };\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      const errorMessage = ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || 'Check-out failed';\n      showError(errorMessage);\n      return {\n        success: false,\n        error: errorMessage\n      };\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Get location\n  const getCurrentLocation = () => {\n    return new Promise((resolve, reject) => {\n      if (!navigator.geolocation) {\n        reject(new Error('Geolocation is not supported by this browser'));\n        return;\n      }\n      navigator.geolocation.getCurrentPosition(async position => {\n        const {\n          latitude,\n          longitude\n        } = position.coords;\n        try {\n          var _data$results, _data$results$;\n          // Reverse geocoding to get address\n          const response = await fetch(`https://api.opencagedata.com/geocode/v1/json?q=${latitude}+${longitude}&key=${process.env.REACT_APP_GEOCODING_API_KEY || 'demo'}`);\n          const data = await response.json();\n          const address = ((_data$results = data.results) === null || _data$results === void 0 ? void 0 : (_data$results$ = _data$results[0]) === null || _data$results$ === void 0 ? void 0 : _data$results$.formatted) || 'Unknown location';\n          resolve({\n            latitude,\n            longitude,\n            address,\n            accuracy: position.coords.accuracy\n          });\n        } catch (error) {\n          // If reverse geocoding fails, still return coordinates\n          resolve({\n            latitude,\n            longitude,\n            address: 'Location detected',\n            accuracy: position.coords.accuracy\n          });\n        }\n      }, error => {\n        let message = 'Unable to retrieve location';\n        switch (error.code) {\n          case error.PERMISSION_DENIED:\n            message = 'Location access denied by user';\n            break;\n          case error.POSITION_UNAVAILABLE:\n            message = 'Location information unavailable';\n            break;\n          case error.TIMEOUT:\n            message = 'Location request timed out';\n            break;\n        }\n        reject(new Error(message));\n      }, {\n        enableHighAccuracy: true,\n        timeout: 10000,\n        maximumAge: 300000 // 5 minutes\n      });\n    });\n  };\n\n  // Capture face image from camera\n  const captureFaceImage = videoElement => {\n    return new Promise((resolve, reject) => {\n      try {\n        const canvas = document.createElement('canvas');\n        const context = canvas.getContext('2d');\n        canvas.width = videoElement.videoWidth;\n        canvas.height = videoElement.videoHeight;\n        context.drawImage(videoElement, 0, 0, canvas.width, canvas.height);\n        canvas.toBlob(blob => {\n          if (blob) {\n            resolve(blob);\n          } else {\n            reject(new Error('Failed to capture image'));\n          }\n        }, 'image/jpeg', 0.8);\n      } catch (error) {\n        reject(error);\n      }\n    });\n  };\n\n  // Start camera\n  const startCamera = async () => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        video: {\n          width: {\n            ideal: 640\n          },\n          height: {\n            ideal: 480\n          },\n          facingMode: 'user'\n        }\n      });\n      return stream;\n    } catch (error) {\n      let message = 'Unable to access camera';\n      if (error.name === 'NotAllowedError') {\n        message = 'Camera access denied';\n      } else if (error.name === 'NotFoundError') {\n        message = 'No camera found';\n      }\n      throw new Error(message);\n    }\n  };\n\n  // Stop camera\n  const stopCamera = stream => {\n    if (stream) {\n      stream.getTracks().forEach(track => track.stop());\n    }\n  };\n\n  // Update attendance record\n  const updateAttendance = async (attendanceId, updates) => {\n    setLoading(true);\n    try {\n      const response = await apiClient.put(`/attendance/${attendanceId}`, updates);\n      await fetchAttendance();\n      showSuccess('Attendance updated successfully');\n      return {\n        success: true,\n        data: response.data\n      };\n    } catch (error) {\n      var _error$response4, _error$response4$data;\n      const errorMessage = ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.message) || 'Update failed';\n      showError(errorMessage);\n      return {\n        success: false,\n        error: errorMessage\n      };\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Delete attendance record\n  const deleteAttendance = async attendanceId => {\n    setLoading(true);\n    try {\n      await apiClient.delete(`/attendance/${attendanceId}`);\n      await fetchAttendance();\n      showSuccess('Attendance record deleted');\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response5, _error$response5$data;\n      const errorMessage = ((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : (_error$response5$data = _error$response5.data) === null || _error$response5$data === void 0 ? void 0 : _error$response5$data.message) || 'Delete failed';\n      showError(errorMessage);\n      return {\n        success: false,\n        error: errorMessage\n      };\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Export attendance data\n  const exportAttendance = async (filters = {}, format = 'csv') => {\n    try {\n      const params = new URLSearchParams();\n      Object.keys(filters).forEach(key => {\n        if (filters[key]) {\n          params.append(key, filters[key]);\n        }\n      });\n      params.append('format', format);\n      const response = await apiClient.get(`/attendance/export?${params.toString()}`, {\n        responseType: 'blob'\n      });\n\n      // Create download link\n      const blob = new Blob([response.data]);\n      const url = window.URL.createObjectURL(blob);\n      const link = document.createElement('a');\n      link.href = url;\n      const fileName = `attendance_${new Date().toISOString().split('T')[0]}.${format}`;\n      link.download = fileName;\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n      window.URL.revokeObjectURL(url);\n      showSuccess('Attendance data exported successfully');\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response6, _error$response6$data;\n      const errorMessage = ((_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : (_error$response6$data = _error$response6.data) === null || _error$response6$data === void 0 ? void 0 : _error$response6$data.message) || 'Export failed';\n      showError(errorMessage);\n      return {\n        success: false,\n        error: errorMessage\n      };\n    }\n  };\n\n  // Get attendance summary\n  const getAttendanceSummary = useCallback(async (employeeId, period = 'month') => {\n    try {\n      const params = employeeId ? `?employeeId=${employeeId}&period=${period}` : `?period=${period}`;\n      const response = await apiClient.get(`/attendance/summary${params}`);\n      return response.data.summary;\n    } catch (error) {\n      console.error('Error fetching attendance summary:', error);\n      return null;\n    }\n  }, [apiClient]);\n\n  // Check if user can check in/out\n  const canCheckIn = () => {\n    if (!todayAttendance) return true;\n    return !todayAttendance.checkInTime || todayAttendance.checkOutTime;\n  };\n  const canCheckOut = () => {\n    if (!todayAttendance) return false;\n    return todayAttendance.checkInTime && !todayAttendance.checkOutTime;\n  };\n\n  // Clear error\n  const clearError = () => {\n    setError(null);\n  };\n\n  // Load data on mount\n  useEffect(() => {\n    if (user) {\n      fetchTodayAttendance();\n      fetchStats();\n    }\n  }, [user, fetchTodayAttendance, fetchStats]);\n  return {\n    // State\n    attendance,\n    todayAttendance,\n    stats,\n    loading,\n    error,\n    // Actions\n    fetchAttendance,\n    fetchTodayAttendance,\n    fetchStats,\n    checkIn,\n    checkOut,\n    updateAttendance,\n    deleteAttendance,\n    exportAttendance,\n    getAttendanceSummary,\n    // Utilities\n    getCurrentLocation,\n    captureFaceImage,\n    startCamera,\n    stopCamera,\n    canCheckIn,\n    canCheckOut,\n    clearError\n  };\n};\n_s(useAttendance, \"S/mrY26eQ7yN7cxy4tUU75dvlJ8=\", false, function () {\n  return [useAuth, useNotifications];\n});","map":{"version":3,"names":["useState","useEffect","useCallback","useAuth","useNotifications","useAttendance","_s","apiClient","user","showSuccess","showError","attendance","setAttendance","todayAttendance","setTodayAttendance","stats","setStats","present","absent","late","overtime","loading","setLoading","error","setError","fetchAttendance","filters","params","URLSearchParams","Object","keys","forEach","key","append","response","get","toString","data","_error$response","_error$response$data","errorMessage","message","fetchTodayAttendance","today","Date","toISOString","split","console","fetchStats","period","checkIn","locationData","faceData","formData","FormData","latitude","longitude","address","File","post","headers","success","_error$response2","_error$response2$data","checkOut","_error$response3","_error$response3$data","getCurrentLocation","Promise","resolve","reject","navigator","geolocation","Error","getCurrentPosition","position","coords","_data$results","_data$results$","fetch","process","env","REACT_APP_GEOCODING_API_KEY","json","results","formatted","accuracy","code","PERMISSION_DENIED","POSITION_UNAVAILABLE","TIMEOUT","enableHighAccuracy","timeout","maximumAge","captureFaceImage","videoElement","canvas","document","createElement","context","getContext","width","videoWidth","height","videoHeight","drawImage","toBlob","blob","startCamera","stream","mediaDevices","getUserMedia","video","ideal","facingMode","name","stopCamera","getTracks","track","stop","updateAttendance","attendanceId","updates","put","_error$response4","_error$response4$data","deleteAttendance","delete","_error$response5","_error$response5$data","exportAttendance","format","responseType","Blob","url","window","URL","createObjectURL","link","href","fileName","download","body","appendChild","click","removeChild","revokeObjectURL","_error$response6","_error$response6$data","getAttendanceSummary","employeeId","summary","canCheckIn","checkInTime","checkOutTime","canCheckOut","clearError"],"sources":["C:/Users/m.hakkim/Documents/Downloads/Attendance/frontend/src/hooks/useAttendance.js"],"sourcesContent":["// frontend/src/hooks/useAttendance.js\nimport { useState, useEffect, useCallback } from 'react';\nimport { useAuth } from './useAuth';\nimport { useNotifications } from './useNotifications';\n\nexport const useAttendance = () => {\n  const { apiClient, user } = useAuth();\n  const { showSuccess, showError } = useNotifications();\n  \n  const [attendance, setAttendance] = useState([]);\n  const [todayAttendance, setTodayAttendance] = useState(null);\n  const [stats, setStats] = useState({\n    present: 0,\n    absent: 0,\n    late: 0,\n    overtime: 0\n  });\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  // Fetch attendance records\n  const fetchAttendance = useCallback(async (filters = {}) => {\n    setLoading(true);\n    setError(null);\n\n    try {\n      const params = new URLSearchParams();\n      Object.keys(filters).forEach(key => {\n        if (filters[key]) {\n          params.append(key, filters[key]);\n        }\n      });\n\n      const response = await apiClient.get(`/attendance?${params.toString()}`);\n      setAttendance(response.data.attendance);\n      return response.data.attendance;\n    } catch (error) {\n      const errorMessage = error.response?.data?.message || 'Failed to fetch attendance';\n      setError(errorMessage);\n      showError(errorMessage);\n      return [];\n    } finally {\n      setLoading(false);\n    }\n  }, [apiClient, showError]);\n\n  // Fetch today's attendance\n  const fetchTodayAttendance = useCallback(async () => {\n    try {\n      const today = new Date().toISOString().split('T')[0];\n      const response = await apiClient.get(`/attendance/today?date=${today}`);\n      setTodayAttendance(response.data.attendance);\n      return response.data.attendance;\n    } catch (error) {\n      console.error('Error fetching today attendance:', error);\n      return null;\n    }\n  }, [apiClient]);\n\n  // Fetch attendance statistics\n  const fetchStats = useCallback(async (period = 'month') => {\n    try {\n      const response = await apiClient.get(`/attendance/stats?period=${period}`);\n      setStats(response.data.stats);\n      return response.data.stats;\n    } catch (error) {\n      console.error('Error fetching attendance stats:', error);\n      return null;\n    }\n  }, [apiClient]);\n\n  // Check in attendance\n  const checkIn = async (locationData, faceData) => {\n    setLoading(true);\n    \n    try {\n      const formData = new FormData();\n      \n      // Add location data\n      if (locationData) {\n        formData.append('latitude', locationData.latitude);\n        formData.append('longitude', locationData.longitude);\n        formData.append('address', locationData.address || '');\n      }\n      \n      // Add face image data\n      if (faceData) {\n        if (faceData instanceof File) {\n          formData.append('faceImage', faceData);\n        } else if (typeof faceData === 'string') {\n          // Base64 image data\n          formData.append('faceImageData', faceData);\n        }\n      }\n\n      const response = await apiClient.post('/attendance/check-in', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n\n      await fetchTodayAttendance();\n      showSuccess('Checked in successfully');\n      return { success: true, data: response.data };\n    } catch (error) {\n      const errorMessage = error.response?.data?.message || 'Check-in failed';\n      showError(errorMessage);\n      return { success: false, error: errorMessage };\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Check out attendance\n  const checkOut = async (locationData) => {\n    setLoading(true);\n    \n    try {\n      const data = {};\n      \n      // Add location data\n      if (locationData) {\n        data.latitude = locationData.latitude;\n        data.longitude = locationData.longitude;\n        data.address = locationData.address || '';\n      }\n\n      const response = await apiClient.post('/attendance/check-out', data);\n      await fetchTodayAttendance();\n      showSuccess('Checked out successfully');\n      return { success: true, data: response.data };\n    } catch (error) {\n      const errorMessage = error.response?.data?.message || 'Check-out failed';\n      showError(errorMessage);\n      return { success: false, error: errorMessage };\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Get location\n  const getCurrentLocation = () => {\n    return new Promise((resolve, reject) => {\n      if (!navigator.geolocation) {\n        reject(new Error('Geolocation is not supported by this browser'));\n        return;\n      }\n\n      navigator.geolocation.getCurrentPosition(\n        async (position) => {\n          const { latitude, longitude } = position.coords;\n          \n          try {\n            // Reverse geocoding to get address\n            const response = await fetch(\n              `https://api.opencagedata.com/geocode/v1/json?q=${latitude}+${longitude}&key=${process.env.REACT_APP_GEOCODING_API_KEY || 'demo'}`\n            );\n            const data = await response.json();\n            const address = data.results?.[0]?.formatted || 'Unknown location';\n            \n            resolve({\n              latitude,\n              longitude,\n              address,\n              accuracy: position.coords.accuracy\n            });\n          } catch (error) {\n            // If reverse geocoding fails, still return coordinates\n            resolve({\n              latitude,\n              longitude,\n              address: 'Location detected',\n              accuracy: position.coords.accuracy\n            });\n          }\n        },\n        (error) => {\n          let message = 'Unable to retrieve location';\n          switch (error.code) {\n            case error.PERMISSION_DENIED:\n              message = 'Location access denied by user';\n              break;\n            case error.POSITION_UNAVAILABLE:\n              message = 'Location information unavailable';\n              break;\n            case error.TIMEOUT:\n              message = 'Location request timed out';\n              break;\n          }\n          reject(new Error(message));\n        },\n        {\n          enableHighAccuracy: true,\n          timeout: 10000,\n          maximumAge: 300000 // 5 minutes\n        }\n      );\n    });\n  };\n\n  // Capture face image from camera\n  const captureFaceImage = (videoElement) => {\n    return new Promise((resolve, reject) => {\n      try {\n        const canvas = document.createElement('canvas');\n        const context = canvas.getContext('2d');\n        \n        canvas.width = videoElement.videoWidth;\n        canvas.height = videoElement.videoHeight;\n        \n        context.drawImage(videoElement, 0, 0, canvas.width, canvas.height);\n        \n        canvas.toBlob((blob) => {\n          if (blob) {\n            resolve(blob);\n          } else {\n            reject(new Error('Failed to capture image'));\n          }\n        }, 'image/jpeg', 0.8);\n      } catch (error) {\n        reject(error);\n      }\n    });\n  };\n\n  // Start camera\n  const startCamera = async () => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        video: {\n          width: { ideal: 640 },\n          height: { ideal: 480 },\n          facingMode: 'user'\n        }\n      });\n      return stream;\n    } catch (error) {\n      let message = 'Unable to access camera';\n      if (error.name === 'NotAllowedError') {\n        message = 'Camera access denied';\n      } else if (error.name === 'NotFoundError') {\n        message = 'No camera found';\n      }\n      throw new Error(message);\n    }\n  };\n\n  // Stop camera\n  const stopCamera = (stream) => {\n    if (stream) {\n      stream.getTracks().forEach(track => track.stop());\n    }\n  };\n\n  // Update attendance record\n  const updateAttendance = async (attendanceId, updates) => {\n    setLoading(true);\n    \n    try {\n      const response = await apiClient.put(`/attendance/${attendanceId}`, updates);\n      await fetchAttendance();\n      showSuccess('Attendance updated successfully');\n      return { success: true, data: response.data };\n    } catch (error) {\n      const errorMessage = error.response?.data?.message || 'Update failed';\n      showError(errorMessage);\n      return { success: false, error: errorMessage };\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Delete attendance record\n  const deleteAttendance = async (attendanceId) => {\n    setLoading(true);\n    \n    try {\n      await apiClient.delete(`/attendance/${attendanceId}`);\n      await fetchAttendance();\n      showSuccess('Attendance record deleted');\n      return { success: true };\n    } catch (error) {\n      const errorMessage = error.response?.data?.message || 'Delete failed';\n      showError(errorMessage);\n      return { success: false, error: errorMessage };\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Export attendance data\n  const exportAttendance = async (filters = {}, format = 'csv') => {\n    try {\n      const params = new URLSearchParams();\n      Object.keys(filters).forEach(key => {\n        if (filters[key]) {\n          params.append(key, filters[key]);\n        }\n      });\n      params.append('format', format);\n\n      const response = await apiClient.get(`/attendance/export?${params.toString()}`, {\n        responseType: 'blob'\n      });\n\n      // Create download link\n      const blob = new Blob([response.data]);\n      const url = window.URL.createObjectURL(blob);\n      const link = document.createElement('a');\n      link.href = url;\n      \n      const fileName = `attendance_${new Date().toISOString().split('T')[0]}.${format}`;\n      link.download = fileName;\n      \n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n      window.URL.revokeObjectURL(url);\n      \n      showSuccess('Attendance data exported successfully');\n      return { success: true };\n    } catch (error) {\n      const errorMessage = error.response?.data?.message || 'Export failed';\n      showError(errorMessage);\n      return { success: false, error: errorMessage };\n    }\n  };\n\n  // Get attendance summary\n  const getAttendanceSummary = useCallback(async (employeeId, period = 'month') => {\n    try {\n      const params = employeeId ? `?employeeId=${employeeId}&period=${period}` : `?period=${period}`;\n      const response = await apiClient.get(`/attendance/summary${params}`);\n      return response.data.summary;\n    } catch (error) {\n      console.error('Error fetching attendance summary:', error);\n      return null;\n    }\n  }, [apiClient]);\n\n  // Check if user can check in/out\n  const canCheckIn = () => {\n    if (!todayAttendance) return true;\n    return !todayAttendance.checkInTime || todayAttendance.checkOutTime;\n  };\n\n  const canCheckOut = () => {\n    if (!todayAttendance) return false;\n    return todayAttendance.checkInTime && !todayAttendance.checkOutTime;\n  };\n\n  // Clear error\n  const clearError = () => {\n    setError(null);\n  };\n\n  // Load data on mount\n  useEffect(() => {\n    if (user) {\n      fetchTodayAttendance();\n      fetchStats();\n    }\n  }, [user, fetchTodayAttendance, fetchStats]);\n\n  return {\n    // State\n    attendance,\n    todayAttendance,\n    stats,\n    loading,\n    error,\n    \n    // Actions\n    fetchAttendance,\n    fetchTodayAttendance,\n    fetchStats,\n    checkIn,\n    checkOut,\n    updateAttendance,\n    deleteAttendance,\n    exportAttendance,\n    getAttendanceSummary,\n    \n    // Utilities\n    getCurrentLocation,\n    captureFaceImage,\n    startCamera,\n    stopCamera,\n    canCheckIn,\n    canCheckOut,\n    clearError\n  };\n};"],"mappings":";AAAA;AACA,SAASA,QAAQ,EAAEC,SAAS,EAAEC,WAAW,QAAQ,OAAO;AACxD,SAASC,OAAO,QAAQ,WAAW;AACnC,SAASC,gBAAgB,QAAQ,oBAAoB;AAErD,OAAO,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjC,MAAM;IAAEC,SAAS;IAAEC;EAAK,CAAC,GAAGL,OAAO,CAAC,CAAC;EACrC,MAAM;IAAEM,WAAW;IAAEC;EAAU,CAAC,GAAGN,gBAAgB,CAAC,CAAC;EAErD,MAAM,CAACO,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACa,eAAe,EAAEC,kBAAkB,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAC5D,MAAM,CAACe,KAAK,EAAEC,QAAQ,CAAC,GAAGhB,QAAQ,CAAC;IACjCiB,OAAO,EAAE,CAAC;IACVC,MAAM,EAAE,CAAC;IACTC,IAAI,EAAE,CAAC;IACPC,QAAQ,EAAE;EACZ,CAAC,CAAC;EACF,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGtB,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACuB,KAAK,EAAEC,QAAQ,CAAC,GAAGxB,QAAQ,CAAC,IAAI,CAAC;;EAExC;EACA,MAAMyB,eAAe,GAAGvB,WAAW,CAAC,OAAOwB,OAAO,GAAG,CAAC,CAAC,KAAK;IAC1DJ,UAAU,CAAC,IAAI,CAAC;IAChBE,QAAQ,CAAC,IAAI,CAAC;IAEd,IAAI;MACF,MAAMG,MAAM,GAAG,IAAIC,eAAe,CAAC,CAAC;MACpCC,MAAM,CAACC,IAAI,CAACJ,OAAO,CAAC,CAACK,OAAO,CAACC,GAAG,IAAI;QAClC,IAAIN,OAAO,CAACM,GAAG,CAAC,EAAE;UAChBL,MAAM,CAACM,MAAM,CAACD,GAAG,EAAEN,OAAO,CAACM,GAAG,CAAC,CAAC;QAClC;MACF,CAAC,CAAC;MAEF,MAAME,QAAQ,GAAG,MAAM3B,SAAS,CAAC4B,GAAG,CAAC,eAAeR,MAAM,CAACS,QAAQ,CAAC,CAAC,EAAE,CAAC;MACxExB,aAAa,CAACsB,QAAQ,CAACG,IAAI,CAAC1B,UAAU,CAAC;MACvC,OAAOuB,QAAQ,CAACG,IAAI,CAAC1B,UAAU;IACjC,CAAC,CAAC,OAAOY,KAAK,EAAE;MAAA,IAAAe,eAAA,EAAAC,oBAAA;MACd,MAAMC,YAAY,GAAG,EAAAF,eAAA,GAAAf,KAAK,CAACW,QAAQ,cAAAI,eAAA,wBAAAC,oBAAA,GAAdD,eAAA,CAAgBD,IAAI,cAAAE,oBAAA,uBAApBA,oBAAA,CAAsBE,OAAO,KAAI,4BAA4B;MAClFjB,QAAQ,CAACgB,YAAY,CAAC;MACtB9B,SAAS,CAAC8B,YAAY,CAAC;MACvB,OAAO,EAAE;IACX,CAAC,SAAS;MACRlB,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC,EAAE,CAACf,SAAS,EAAEG,SAAS,CAAC,CAAC;;EAE1B;EACA,MAAMgC,oBAAoB,GAAGxC,WAAW,CAAC,YAAY;IACnD,IAAI;MACF,MAAMyC,KAAK,GAAG,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;MACpD,MAAMZ,QAAQ,GAAG,MAAM3B,SAAS,CAAC4B,GAAG,CAAC,0BAA0BQ,KAAK,EAAE,CAAC;MACvE7B,kBAAkB,CAACoB,QAAQ,CAACG,IAAI,CAAC1B,UAAU,CAAC;MAC5C,OAAOuB,QAAQ,CAACG,IAAI,CAAC1B,UAAU;IACjC,CAAC,CAAC,OAAOY,KAAK,EAAE;MACdwB,OAAO,CAACxB,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;MACxD,OAAO,IAAI;IACb;EACF,CAAC,EAAE,CAAChB,SAAS,CAAC,CAAC;;EAEf;EACA,MAAMyC,UAAU,GAAG9C,WAAW,CAAC,OAAO+C,MAAM,GAAG,OAAO,KAAK;IACzD,IAAI;MACF,MAAMf,QAAQ,GAAG,MAAM3B,SAAS,CAAC4B,GAAG,CAAC,4BAA4Bc,MAAM,EAAE,CAAC;MAC1EjC,QAAQ,CAACkB,QAAQ,CAACG,IAAI,CAACtB,KAAK,CAAC;MAC7B,OAAOmB,QAAQ,CAACG,IAAI,CAACtB,KAAK;IAC5B,CAAC,CAAC,OAAOQ,KAAK,EAAE;MACdwB,OAAO,CAACxB,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;MACxD,OAAO,IAAI;IACb;EACF,CAAC,EAAE,CAAChB,SAAS,CAAC,CAAC;;EAEf;EACA,MAAM2C,OAAO,GAAG,MAAAA,CAAOC,YAAY,EAAEC,QAAQ,KAAK;IAChD9B,UAAU,CAAC,IAAI,CAAC;IAEhB,IAAI;MACF,MAAM+B,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;;MAE/B;MACA,IAAIH,YAAY,EAAE;QAChBE,QAAQ,CAACpB,MAAM,CAAC,UAAU,EAAEkB,YAAY,CAACI,QAAQ,CAAC;QAClDF,QAAQ,CAACpB,MAAM,CAAC,WAAW,EAAEkB,YAAY,CAACK,SAAS,CAAC;QACpDH,QAAQ,CAACpB,MAAM,CAAC,SAAS,EAAEkB,YAAY,CAACM,OAAO,IAAI,EAAE,CAAC;MACxD;;MAEA;MACA,IAAIL,QAAQ,EAAE;QACZ,IAAIA,QAAQ,YAAYM,IAAI,EAAE;UAC5BL,QAAQ,CAACpB,MAAM,CAAC,WAAW,EAAEmB,QAAQ,CAAC;QACxC,CAAC,MAAM,IAAI,OAAOA,QAAQ,KAAK,QAAQ,EAAE;UACvC;UACAC,QAAQ,CAACpB,MAAM,CAAC,eAAe,EAAEmB,QAAQ,CAAC;QAC5C;MACF;MAEA,MAAMlB,QAAQ,GAAG,MAAM3B,SAAS,CAACoD,IAAI,CAAC,sBAAsB,EAAEN,QAAQ,EAAE;QACtEO,OAAO,EAAE;UACP,cAAc,EAAE;QAClB;MACF,CAAC,CAAC;MAEF,MAAMlB,oBAAoB,CAAC,CAAC;MAC5BjC,WAAW,CAAC,yBAAyB,CAAC;MACtC,OAAO;QAAEoD,OAAO,EAAE,IAAI;QAAExB,IAAI,EAAEH,QAAQ,CAACG;MAAK,CAAC;IAC/C,CAAC,CAAC,OAAOd,KAAK,EAAE;MAAA,IAAAuC,gBAAA,EAAAC,qBAAA;MACd,MAAMvB,YAAY,GAAG,EAAAsB,gBAAA,GAAAvC,KAAK,CAACW,QAAQ,cAAA4B,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBzB,IAAI,cAAA0B,qBAAA,uBAApBA,qBAAA,CAAsBtB,OAAO,KAAI,iBAAiB;MACvE/B,SAAS,CAAC8B,YAAY,CAAC;MACvB,OAAO;QAAEqB,OAAO,EAAE,KAAK;QAAEtC,KAAK,EAAEiB;MAAa,CAAC;IAChD,CAAC,SAAS;MACRlB,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;;EAED;EACA,MAAM0C,QAAQ,GAAG,MAAOb,YAAY,IAAK;IACvC7B,UAAU,CAAC,IAAI,CAAC;IAEhB,IAAI;MACF,MAAMe,IAAI,GAAG,CAAC,CAAC;;MAEf;MACA,IAAIc,YAAY,EAAE;QAChBd,IAAI,CAACkB,QAAQ,GAAGJ,YAAY,CAACI,QAAQ;QACrClB,IAAI,CAACmB,SAAS,GAAGL,YAAY,CAACK,SAAS;QACvCnB,IAAI,CAACoB,OAAO,GAAGN,YAAY,CAACM,OAAO,IAAI,EAAE;MAC3C;MAEA,MAAMvB,QAAQ,GAAG,MAAM3B,SAAS,CAACoD,IAAI,CAAC,uBAAuB,EAAEtB,IAAI,CAAC;MACpE,MAAMK,oBAAoB,CAAC,CAAC;MAC5BjC,WAAW,CAAC,0BAA0B,CAAC;MACvC,OAAO;QAAEoD,OAAO,EAAE,IAAI;QAAExB,IAAI,EAAEH,QAAQ,CAACG;MAAK,CAAC;IAC/C,CAAC,CAAC,OAAOd,KAAK,EAAE;MAAA,IAAA0C,gBAAA,EAAAC,qBAAA;MACd,MAAM1B,YAAY,GAAG,EAAAyB,gBAAA,GAAA1C,KAAK,CAACW,QAAQ,cAAA+B,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgB5B,IAAI,cAAA6B,qBAAA,uBAApBA,qBAAA,CAAsBzB,OAAO,KAAI,kBAAkB;MACxE/B,SAAS,CAAC8B,YAAY,CAAC;MACvB,OAAO;QAAEqB,OAAO,EAAE,KAAK;QAAEtC,KAAK,EAAEiB;MAAa,CAAC;IAChD,CAAC,SAAS;MACRlB,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;;EAED;EACA,MAAM6C,kBAAkB,GAAGA,CAAA,KAAM;IAC/B,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;MACtC,IAAI,CAACC,SAAS,CAACC,WAAW,EAAE;QAC1BF,MAAM,CAAC,IAAIG,KAAK,CAAC,8CAA8C,CAAC,CAAC;QACjE;MACF;MAEAF,SAAS,CAACC,WAAW,CAACE,kBAAkB,CACtC,MAAOC,QAAQ,IAAK;QAClB,MAAM;UAAEpB,QAAQ;UAAEC;QAAU,CAAC,GAAGmB,QAAQ,CAACC,MAAM;QAE/C,IAAI;UAAA,IAAAC,aAAA,EAAAC,cAAA;UACF;UACA,MAAM5C,QAAQ,GAAG,MAAM6C,KAAK,CAC1B,kDAAkDxB,QAAQ,IAAIC,SAAS,QAAQwB,OAAO,CAACC,GAAG,CAACC,2BAA2B,IAAI,MAAM,EAClI,CAAC;UACD,MAAM7C,IAAI,GAAG,MAAMH,QAAQ,CAACiD,IAAI,CAAC,CAAC;UAClC,MAAM1B,OAAO,GAAG,EAAAoB,aAAA,GAAAxC,IAAI,CAAC+C,OAAO,cAAAP,aAAA,wBAAAC,cAAA,GAAZD,aAAA,CAAe,CAAC,CAAC,cAAAC,cAAA,uBAAjBA,cAAA,CAAmBO,SAAS,KAAI,kBAAkB;UAElEhB,OAAO,CAAC;YACNd,QAAQ;YACRC,SAAS;YACTC,OAAO;YACP6B,QAAQ,EAAEX,QAAQ,CAACC,MAAM,CAACU;UAC5B,CAAC,CAAC;QACJ,CAAC,CAAC,OAAO/D,KAAK,EAAE;UACd;UACA8C,OAAO,CAAC;YACNd,QAAQ;YACRC,SAAS;YACTC,OAAO,EAAE,mBAAmB;YAC5B6B,QAAQ,EAAEX,QAAQ,CAACC,MAAM,CAACU;UAC5B,CAAC,CAAC;QACJ;MACF,CAAC,EACA/D,KAAK,IAAK;QACT,IAAIkB,OAAO,GAAG,6BAA6B;QAC3C,QAAQlB,KAAK,CAACgE,IAAI;UAChB,KAAKhE,KAAK,CAACiE,iBAAiB;YAC1B/C,OAAO,GAAG,gCAAgC;YAC1C;UACF,KAAKlB,KAAK,CAACkE,oBAAoB;YAC7BhD,OAAO,GAAG,kCAAkC;YAC5C;UACF,KAAKlB,KAAK,CAACmE,OAAO;YAChBjD,OAAO,GAAG,4BAA4B;YACtC;QACJ;QACA6B,MAAM,CAAC,IAAIG,KAAK,CAAChC,OAAO,CAAC,CAAC;MAC5B,CAAC,EACD;QACEkD,kBAAkB,EAAE,IAAI;QACxBC,OAAO,EAAE,KAAK;QACdC,UAAU,EAAE,MAAM,CAAC;MACrB,CACF,CAAC;IACH,CAAC,CAAC;EACJ,CAAC;;EAED;EACA,MAAMC,gBAAgB,GAAIC,YAAY,IAAK;IACzC,OAAO,IAAI3B,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;MACtC,IAAI;QACF,MAAM0B,MAAM,GAAGC,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC;QAC/C,MAAMC,OAAO,GAAGH,MAAM,CAACI,UAAU,CAAC,IAAI,CAAC;QAEvCJ,MAAM,CAACK,KAAK,GAAGN,YAAY,CAACO,UAAU;QACtCN,MAAM,CAACO,MAAM,GAAGR,YAAY,CAACS,WAAW;QAExCL,OAAO,CAACM,SAAS,CAACV,YAAY,EAAE,CAAC,EAAE,CAAC,EAAEC,MAAM,CAACK,KAAK,EAAEL,MAAM,CAACO,MAAM,CAAC;QAElEP,MAAM,CAACU,MAAM,CAAEC,IAAI,IAAK;UACtB,IAAIA,IAAI,EAAE;YACRtC,OAAO,CAACsC,IAAI,CAAC;UACf,CAAC,MAAM;YACLrC,MAAM,CAAC,IAAIG,KAAK,CAAC,yBAAyB,CAAC,CAAC;UAC9C;QACF,CAAC,EAAE,YAAY,EAAE,GAAG,CAAC;MACvB,CAAC,CAAC,OAAOlD,KAAK,EAAE;QACd+C,MAAM,CAAC/C,KAAK,CAAC;MACf;IACF,CAAC,CAAC;EACJ,CAAC;;EAED;EACA,MAAMqF,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI;MACF,MAAMC,MAAM,GAAG,MAAMtC,SAAS,CAACuC,YAAY,CAACC,YAAY,CAAC;QACvDC,KAAK,EAAE;UACLX,KAAK,EAAE;YAAEY,KAAK,EAAE;UAAI,CAAC;UACrBV,MAAM,EAAE;YAAEU,KAAK,EAAE;UAAI,CAAC;UACtBC,UAAU,EAAE;QACd;MACF,CAAC,CAAC;MACF,OAAOL,MAAM;IACf,CAAC,CAAC,OAAOtF,KAAK,EAAE;MACd,IAAIkB,OAAO,GAAG,yBAAyB;MACvC,IAAIlB,KAAK,CAAC4F,IAAI,KAAK,iBAAiB,EAAE;QACpC1E,OAAO,GAAG,sBAAsB;MAClC,CAAC,MAAM,IAAIlB,KAAK,CAAC4F,IAAI,KAAK,eAAe,EAAE;QACzC1E,OAAO,GAAG,iBAAiB;MAC7B;MACA,MAAM,IAAIgC,KAAK,CAAChC,OAAO,CAAC;IAC1B;EACF,CAAC;;EAED;EACA,MAAM2E,UAAU,GAAIP,MAAM,IAAK;IAC7B,IAAIA,MAAM,EAAE;MACVA,MAAM,CAACQ,SAAS,CAAC,CAAC,CAACtF,OAAO,CAACuF,KAAK,IAAIA,KAAK,CAACC,IAAI,CAAC,CAAC,CAAC;IACnD;EACF,CAAC;;EAED;EACA,MAAMC,gBAAgB,GAAG,MAAAA,CAAOC,YAAY,EAAEC,OAAO,KAAK;IACxDpG,UAAU,CAAC,IAAI,CAAC;IAEhB,IAAI;MACF,MAAMY,QAAQ,GAAG,MAAM3B,SAAS,CAACoH,GAAG,CAAC,eAAeF,YAAY,EAAE,EAAEC,OAAO,CAAC;MAC5E,MAAMjG,eAAe,CAAC,CAAC;MACvBhB,WAAW,CAAC,iCAAiC,CAAC;MAC9C,OAAO;QAAEoD,OAAO,EAAE,IAAI;QAAExB,IAAI,EAAEH,QAAQ,CAACG;MAAK,CAAC;IAC/C,CAAC,CAAC,OAAOd,KAAK,EAAE;MAAA,IAAAqG,gBAAA,EAAAC,qBAAA;MACd,MAAMrF,YAAY,GAAG,EAAAoF,gBAAA,GAAArG,KAAK,CAACW,QAAQ,cAAA0F,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBvF,IAAI,cAAAwF,qBAAA,uBAApBA,qBAAA,CAAsBpF,OAAO,KAAI,eAAe;MACrE/B,SAAS,CAAC8B,YAAY,CAAC;MACvB,OAAO;QAAEqB,OAAO,EAAE,KAAK;QAAEtC,KAAK,EAAEiB;MAAa,CAAC;IAChD,CAAC,SAAS;MACRlB,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;;EAED;EACA,MAAMwG,gBAAgB,GAAG,MAAOL,YAAY,IAAK;IAC/CnG,UAAU,CAAC,IAAI,CAAC;IAEhB,IAAI;MACF,MAAMf,SAAS,CAACwH,MAAM,CAAC,eAAeN,YAAY,EAAE,CAAC;MACrD,MAAMhG,eAAe,CAAC,CAAC;MACvBhB,WAAW,CAAC,2BAA2B,CAAC;MACxC,OAAO;QAAEoD,OAAO,EAAE;MAAK,CAAC;IAC1B,CAAC,CAAC,OAAOtC,KAAK,EAAE;MAAA,IAAAyG,gBAAA,EAAAC,qBAAA;MACd,MAAMzF,YAAY,GAAG,EAAAwF,gBAAA,GAAAzG,KAAK,CAACW,QAAQ,cAAA8F,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgB3F,IAAI,cAAA4F,qBAAA,uBAApBA,qBAAA,CAAsBxF,OAAO,KAAI,eAAe;MACrE/B,SAAS,CAAC8B,YAAY,CAAC;MACvB,OAAO;QAAEqB,OAAO,EAAE,KAAK;QAAEtC,KAAK,EAAEiB;MAAa,CAAC;IAChD,CAAC,SAAS;MACRlB,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;;EAED;EACA,MAAM4G,gBAAgB,GAAG,MAAAA,CAAOxG,OAAO,GAAG,CAAC,CAAC,EAAEyG,MAAM,GAAG,KAAK,KAAK;IAC/D,IAAI;MACF,MAAMxG,MAAM,GAAG,IAAIC,eAAe,CAAC,CAAC;MACpCC,MAAM,CAACC,IAAI,CAACJ,OAAO,CAAC,CAACK,OAAO,CAACC,GAAG,IAAI;QAClC,IAAIN,OAAO,CAACM,GAAG,CAAC,EAAE;UAChBL,MAAM,CAACM,MAAM,CAACD,GAAG,EAAEN,OAAO,CAACM,GAAG,CAAC,CAAC;QAClC;MACF,CAAC,CAAC;MACFL,MAAM,CAACM,MAAM,CAAC,QAAQ,EAAEkG,MAAM,CAAC;MAE/B,MAAMjG,QAAQ,GAAG,MAAM3B,SAAS,CAAC4B,GAAG,CAAC,sBAAsBR,MAAM,CAACS,QAAQ,CAAC,CAAC,EAAE,EAAE;QAC9EgG,YAAY,EAAE;MAChB,CAAC,CAAC;;MAEF;MACA,MAAMzB,IAAI,GAAG,IAAI0B,IAAI,CAAC,CAACnG,QAAQ,CAACG,IAAI,CAAC,CAAC;MACtC,MAAMiG,GAAG,GAAGC,MAAM,CAACC,GAAG,CAACC,eAAe,CAAC9B,IAAI,CAAC;MAC5C,MAAM+B,IAAI,GAAGzC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC;MACxCwC,IAAI,CAACC,IAAI,GAAGL,GAAG;MAEf,MAAMM,QAAQ,GAAG,cAAc,IAAIhG,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAIqF,MAAM,EAAE;MACjFO,IAAI,CAACG,QAAQ,GAAGD,QAAQ;MAExB3C,QAAQ,CAAC6C,IAAI,CAACC,WAAW,CAACL,IAAI,CAAC;MAC/BA,IAAI,CAACM,KAAK,CAAC,CAAC;MACZ/C,QAAQ,CAAC6C,IAAI,CAACG,WAAW,CAACP,IAAI,CAAC;MAC/BH,MAAM,CAACC,GAAG,CAACU,eAAe,CAACZ,GAAG,CAAC;MAE/B7H,WAAW,CAAC,uCAAuC,CAAC;MACpD,OAAO;QAAEoD,OAAO,EAAE;MAAK,CAAC;IAC1B,CAAC,CAAC,OAAOtC,KAAK,EAAE;MAAA,IAAA4H,gBAAA,EAAAC,qBAAA;MACd,MAAM5G,YAAY,GAAG,EAAA2G,gBAAA,GAAA5H,KAAK,CAACW,QAAQ,cAAAiH,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgB9G,IAAI,cAAA+G,qBAAA,uBAApBA,qBAAA,CAAsB3G,OAAO,KAAI,eAAe;MACrE/B,SAAS,CAAC8B,YAAY,CAAC;MACvB,OAAO;QAAEqB,OAAO,EAAE,KAAK;QAAEtC,KAAK,EAAEiB;MAAa,CAAC;IAChD;EACF,CAAC;;EAED;EACA,MAAM6G,oBAAoB,GAAGnJ,WAAW,CAAC,OAAOoJ,UAAU,EAAErG,MAAM,GAAG,OAAO,KAAK;IAC/E,IAAI;MACF,MAAMtB,MAAM,GAAG2H,UAAU,GAAG,eAAeA,UAAU,WAAWrG,MAAM,EAAE,GAAG,WAAWA,MAAM,EAAE;MAC9F,MAAMf,QAAQ,GAAG,MAAM3B,SAAS,CAAC4B,GAAG,CAAC,sBAAsBR,MAAM,EAAE,CAAC;MACpE,OAAOO,QAAQ,CAACG,IAAI,CAACkH,OAAO;IAC9B,CAAC,CAAC,OAAOhI,KAAK,EAAE;MACdwB,OAAO,CAACxB,KAAK,CAAC,oCAAoC,EAAEA,KAAK,CAAC;MAC1D,OAAO,IAAI;IACb;EACF,CAAC,EAAE,CAAChB,SAAS,CAAC,CAAC;;EAEf;EACA,MAAMiJ,UAAU,GAAGA,CAAA,KAAM;IACvB,IAAI,CAAC3I,eAAe,EAAE,OAAO,IAAI;IACjC,OAAO,CAACA,eAAe,CAAC4I,WAAW,IAAI5I,eAAe,CAAC6I,YAAY;EACrE,CAAC;EAED,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACxB,IAAI,CAAC9I,eAAe,EAAE,OAAO,KAAK;IAClC,OAAOA,eAAe,CAAC4I,WAAW,IAAI,CAAC5I,eAAe,CAAC6I,YAAY;EACrE,CAAC;;EAED;EACA,MAAME,UAAU,GAAGA,CAAA,KAAM;IACvBpI,QAAQ,CAAC,IAAI,CAAC;EAChB,CAAC;;EAED;EACAvB,SAAS,CAAC,MAAM;IACd,IAAIO,IAAI,EAAE;MACRkC,oBAAoB,CAAC,CAAC;MACtBM,UAAU,CAAC,CAAC;IACd;EACF,CAAC,EAAE,CAACxC,IAAI,EAAEkC,oBAAoB,EAAEM,UAAU,CAAC,CAAC;EAE5C,OAAO;IACL;IACArC,UAAU;IACVE,eAAe;IACfE,KAAK;IACLM,OAAO;IACPE,KAAK;IAEL;IACAE,eAAe;IACfiB,oBAAoB;IACpBM,UAAU;IACVE,OAAO;IACPc,QAAQ;IACRwD,gBAAgB;IAChBM,gBAAgB;IAChBI,gBAAgB;IAChBmB,oBAAoB;IAEpB;IACAlF,kBAAkB;IAClB2B,gBAAgB;IAChBc,WAAW;IACXQ,UAAU;IACVoC,UAAU;IACVG,WAAW;IACXC;EACF,CAAC;AACH,CAAC;AAACtJ,EAAA,CAnYWD,aAAa;EAAA,QACIF,OAAO,EACAC,gBAAgB;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}